{"version":3,"sources":["utils/_DATA.js","utils/api.js","actions/users.js","actions/questions.js","actions/shared.js","actions/authedUser.js","components/Nav.js","utils/helpers.js","components/Question.js","components/Dashboard.js","components/AddQuestion.js","components/LeaderboardItem.js","components/Leaderboard.js","components/NotFound.js","components/QuestionDetails.js","components/Login.js","components/App.js","reducers/index.js","reducers/authedUser.js","reducers/users.js","reducers/questions.js","middleware/logger.js","middleware/index.js","index.js"],"names":["users","sarahedo","id","name","avatarURL","answers","questions","tylermcginnis","johndoe","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","saveQuestionAnswer","info","qid","answer","_saveQuestionAnswer","RECEIVE_USERS","ADD_USER_QUESTION","ADD_USER_QUESTION_ANSWER","RECEIVE_QUESTIONS","ADD_QUESTION","ADD_QUESTION_ANSWER","handleInitialData","dispatch","all","then","type","receiveUsers","receiveQuestions","handleAddQuestion","optionA","optionB","getState","showLoading","questionId","addQuestion","userId","hideLoading","handleAddQuestionAnswer","addQuestionAnswer","addUserQuestionAnswer","SET_AUTHED_USER","LOGOUT_USER","Nav","className","to","exact","activeClassName","this","props","render","history","onClick","push","Component","connect","isAnsweredQuestion","optionOneVotes","optionTwoVotes","includes","Question","console","log","style","width","src","height","alt","Dashboard","questionIds","filter","map","key","Object","keys","sort","a","b","AddQuestion","state","redirectToHome","handleChangeOptionA","e","target","value","setState","handleChangeOptionB","handleSubmit","preventDefault","onSubmit","placeholder","onChange","disabled","LeaderboardItem","asked","answered","rank","user","length","Leaderboard","userIds","rankCounter","NotFound","QuestionDetails","selectedOption","handleOptionChange","changeEvent","handleFormSubmit","totalVotes","optionOnePercentage","optionTwoPercentage","userAnswer","questionFound","fetchUserAnswer","maxWidth","authorName","checked","readOnly","ProgressBar","label","toFixed","striped","Login","selectedUser","process","App","basename","loading","path","component","match","params","combineReducers","action","loadingBar","loadingBarReducer","logger","store","next","group","returnValue","groupEnd","applyMiddleware","thunk","createStore","reducer","middleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a95835cc.chunk.js","sourcesContent":["let users = {\r\n    sarahedo: {\r\n      id: 'sarahedo',\r\n      name: 'Sarah Edo',\r\n      avatarURL: 'https://cdn3.iconfinder.com/data/icons/business-avatar-1/512/11_avatar-512.png',\r\n      answers: {\r\n        \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\r\n        \"6ni6ok3ym7mf1p33lnez\": 'optionTwo',\r\n        \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\r\n        \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\r\n      },\r\n      questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\r\n    },\r\n    tylermcginnis: {\r\n      id: 'tylermcginnis',\r\n      name: 'Tyler McGinnis',\r\n      avatarURL: 'https://cdn3.iconfinder.com/data/icons/business-avatar-1/512/3_avatar-512.png',\r\n      answers: {\r\n        \"vthrdm985a262al8qx3do\": 'optionOne',\r\n        \"xj352vofupe1dqz9emx13r\": 'optionTwo',\r\n      },\r\n      questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\r\n    },\r\n    johndoe: {\r\n      id: 'johndoe',\r\n      name: 'John Doe',\r\n      avatarURL: 'https://cdn3.iconfinder.com/data/icons/business-avatar-1/512/10_avatar-512.png',\r\n      answers: {\r\n        \"xj352vofupe1dqz9emx13r\": 'optionOne',\r\n        \"vthrdm985a262al8qx3do\": 'optionTwo',\r\n        \"6ni6ok3ym7mf1p33lnez\": 'optionTwo'\r\n      },\r\n      questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\r\n    }\r\n  }\r\n  \r\n  let questions = {\r\n    \"8xf0y6ziyjabvozdd253nd\": {\r\n      id: '8xf0y6ziyjabvozdd253nd',\r\n      author: 'sarahedo',\r\n      timestamp: 1467166872634,\r\n      optionOne: {\r\n        votes: ['sarahedo'],\r\n        text: 'have horrible short term memory',\r\n      },\r\n      optionTwo: {\r\n        votes: [],\r\n        text: 'have horrible long term memory'\r\n      }\r\n    },\r\n    \"6ni6ok3ym7mf1p33lnez\": {\r\n      id: '6ni6ok3ym7mf1p33lnez',\r\n      author: 'johndoe',\r\n      timestamp: 1468479767190,\r\n      optionOne: {\r\n        votes: [],\r\n        text: 'become a superhero',\r\n      },\r\n      optionTwo: {\r\n        votes: ['johndoe', 'sarahedo'],\r\n        text: 'become a supervillain'\r\n      }\r\n    },\r\n    \"am8ehyc8byjqgar0jgpub9\": {\r\n      id: 'am8ehyc8byjqgar0jgpub9',\r\n      author: 'sarahedo',\r\n      timestamp: 1488579767190,\r\n      optionOne: {\r\n        votes: [],\r\n        text: 'be telekinetic',\r\n      },\r\n      optionTwo: {\r\n        votes: ['sarahedo'],\r\n        text: 'be telepathic'\r\n      }\r\n    },\r\n    \"loxhs1bqm25b708cmbf3g\": {\r\n      id: 'loxhs1bqm25b708cmbf3g',\r\n      author: 'tylermcginnis',\r\n      timestamp: 1482579767190,\r\n      optionOne: {\r\n        votes: [],\r\n        text: 'be a front-end developer',\r\n      },\r\n      optionTwo: {\r\n        votes: ['sarahedo'],\r\n        text: 'be a back-end developer'\r\n      }\r\n    },\r\n    \"vthrdm985a262al8qx3do\": {\r\n      id: 'vthrdm985a262al8qx3do',\r\n      author: 'tylermcginnis',\r\n      timestamp: 1489579767190,\r\n      optionOne: {\r\n        votes: ['tylermcginnis'],\r\n        text: 'find $50 yourself',\r\n      },\r\n      optionTwo: {\r\n        votes: ['johndoe'],\r\n        text: 'have your best friend find $500'\r\n      }\r\n    },\r\n    \"xj352vofupe1dqz9emx13r\": {\r\n      id: 'xj352vofupe1dqz9emx13r',\r\n      author: 'johndoe',\r\n      timestamp: 1493579767190,\r\n      optionOne: {\r\n        votes: ['johndoe'],\r\n        text: 'write JavaScript',\r\n      },\r\n      optionTwo: {\r\n        votes: ['tylermcginnis'],\r\n        text: 'write Swift'\r\n      }\r\n    },\r\n  }\r\n  \r\n  function generateUID () {\r\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\r\n  }\r\n  \r\n  export function _getUsers () {\r\n    return new Promise((res, rej) => {\r\n      setTimeout(() => res({...users}), 1000)\r\n    })\r\n  }\r\n  \r\n  export function _getQuestions () {\r\n    return new Promise((res, rej) => {\r\n      setTimeout(() => res({...questions}), 1000)\r\n    })\r\n  }\r\n  \r\n  function formatQuestion ({ optionOneText, optionTwoText, author }) {\r\n    return {\r\n      id: generateUID(),\r\n      timestamp: Date.now(),\r\n      author,\r\n      optionOne: {\r\n        votes: [],\r\n        text: optionOneText,\r\n      },\r\n      optionTwo: {\r\n        votes: [],\r\n        text: optionTwoText,\r\n      }\r\n    }\r\n  }\r\n  \r\n  export function _saveQuestion (question) {\r\n    return new Promise((res, rej) => {\r\n      const authedUser = question.author;\r\n      const formattedQuestion = formatQuestion(question);\r\n  \r\n      setTimeout(() => {\r\n        questions = {\r\n          ...questions,\r\n          [formattedQuestion.id]: formattedQuestion\r\n        }\r\n        \r\n        users = {\r\n          ...users,\r\n          [authedUser]: {\r\n            ...users[authedUser],\r\n            questions: users[authedUser].questions.concat([formattedQuestion.id])\r\n          }\r\n        }\r\n  \r\n        res(formattedQuestion)\r\n      }, 1000)\r\n    })\r\n  }\r\n  \r\n  export function _saveQuestionAnswer ({ authedUser, qid, answer }) {\r\n    return new Promise((res, rej) => {\r\n      setTimeout(() => {\r\n        users = {\r\n          ...users,\r\n          [authedUser]: {\r\n            ...users[authedUser],\r\n            answers: {\r\n              ...users[authedUser].answers,\r\n              [qid]: answer\r\n            }\r\n          }\r\n        }\r\n  \r\n        questions = {\r\n          ...questions,\r\n          [qid]: {\r\n            ...questions[qid],\r\n            [answer]: {\r\n              ...questions[qid][answer],\r\n              votes: questions[qid][answer].votes.concat([authedUser])\r\n            }\r\n          }\r\n        }\r\n  \r\n        res()\r\n      }, 500)\r\n    })\r\n  }","import{\r\n    _getUsers,\r\n    _getQuestions,\r\n    _saveQuestion,\r\n    _saveQuestionAnswer\r\n} from './_DATA'\r\n\r\nexport function getInitialData() {\r\n    return Promise.all([\r\n        _getUsers(),\r\n        _getQuestions()\r\n    ]).then(([users,questions]) =>({\r\n        users,\r\n        questions\r\n    }))\r\n}\r\n\r\nexport function saveQuestion(question){\r\n    return _saveQuestion(question)\r\n}\r\n\r\nexport function saveQuestionAnswer(info){\r\n    return _saveQuestionAnswer(info)\r\n}","export const RECEIVE_USERS = 'RECEIVE_USERS'\r\nexport const ADD_USER_QUESTION = 'ADD_USER_QUESTION'\r\nexport const ADD_USER_QUESTION_ANSWER = 'ADD_USER_QUESTION_ANSWER'\r\n\r\n\r\nexport function receiveUsers (users) {\r\n    return {\r\n        type: RECEIVE_USERS,\r\n        users,\r\n\r\n    }\r\n}\r\n\r\nexport function addUserQuestion (questionId, userId){\r\n    return {\r\n        type : ADD_USER_QUESTION,\r\n        questionId,\r\n        userId\r\n    }\r\n}\r\n\r\nexport function addUserQuestionAnswer(questionId, userId, answer){\r\n    return {\r\n        type: ADD_USER_QUESTION_ANSWER,\r\n        questionId,\r\n        userId,\r\n        answer\r\n    }\r\n}","\r\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS'\r\nexport const ADD_QUESTION = 'ADD_QUESTION'\r\nexport const ADD_QUESTION_ANSWER = 'ADD_QUESTION_ANSWER'\r\n\r\nexport function receiveQuestions (questions) {\r\n    return {\r\n        type: RECEIVE_QUESTIONS,\r\n        questions,\r\n\r\n    }\r\n}\r\n\r\nexport function addQuestion(question){\r\n    return {\r\n        type: ADD_QUESTION,\r\n        question\r\n    }\r\n}\r\n\r\nexport function addQuestionAnswer(answer, qid, userId){\r\n    return {\r\n        type: ADD_QUESTION_ANSWER,\r\n        answer,\r\n        qid,\r\n        userId\r\n    }\r\n}","import {getInitialData, saveQuestionAnswer} from '../utils/api'\r\nimport {receiveUsers} from '../actions/users'\r\nimport {receiveQuestions} from '../actions/questions'\r\nimport {saveQuestion} from '../utils/api'\r\nimport {addQuestion} from './questions'\r\nimport {addUserQuestion} from './users'\r\nimport {addQuestionAnswer} from './questions'\r\nimport {addUserQuestionAnswer} from './users'\r\nimport { showLoading, hideLoading } from 'react-redux-loading-bar'\r\n\r\nexport function handleInitialData() {\r\n    return (dispatch) => {\r\n        return getInitialData()\r\n            .then(({users, questions}) => {\r\n                dispatch(receiveUsers(users))\r\n                dispatch(receiveQuestions(questions))\r\n            })\r\n    }\r\n}\r\n\r\nexport function handleAddQuestion(optionA, optionB){\r\n    return (dispatch, getState) =>{\r\n        dispatch(showLoading())\r\n        const {authedUser} = getState()\r\n\r\n        return saveQuestion({optionOneText: optionA, optionTwoText: optionB, author: authedUser})\r\n        .then((question)=>{\r\n            dispatch(addQuestion(question))\r\n            dispatch(addUserQuestion(question.id, authedUser))\r\n            dispatch(hideLoading())\r\n        })\r\n    }\r\n}\r\n\r\nexport function handleAddQuestionAnswer(answer, qid){\r\n    return (dispatch, getState) =>{\r\n\r\n        const {authedUser} = getState()\r\n        return saveQuestionAnswer({authedUser, qid, answer})\r\n        .then( () => {\r\n            dispatch(addQuestionAnswer(answer, qid, authedUser))\r\n            dispatch(addUserQuestionAnswer(qid, authedUser, answer))\r\n        })\r\n\r\n    }\r\n}","export const SET_AUTHED_USER = 'SET_AUTHED_USER'\r\nexport const LOGOUT_USER = 'LOGOUT_USER'\r\n\r\n\r\nexport function setAuthedUser (id) {\r\n    return{\r\n        type: SET_AUTHED_USER,\r\n        id\r\n    }\r\n}\r\n\r\nexport function logoutUser (){\r\n    return{\r\n        type: LOGOUT_USER\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { logoutUser } from \"../actions/authedUser\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nclass Nav extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"nav\">\r\n        <ul>\r\n          <li>\r\n            <NavLink to=\"/\" exact activeClassName=\"active\">\r\n              Home\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/add\" activeClassName=\"active\">\r\n              Add Question\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/leaderboard\" activeClassName=\"active\">\r\n              Leaderboard\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <b>Welcome {this.props.authedUser}</b>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Route\r\n              render={({ history }) => (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    history.push(\"/\");\r\n                    this.props.dispatch(logoutUser());\r\n                  }}\r\n                  className=\"btn btn-primary btn-logout\">\r\n                  Logout\r\n                </button>\r\n              )}\r\n            />\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(Nav);\r\n","export function formatQuestion (question, author, authedUser){\r\n    const {id} = question\r\n    const {name, avatarURL} = author\r\n\r\n    return{\r\n        name,\r\n        id,\r\n        authedUser,\r\n        avatarURL,\r\n        optionOne: question.optionOne.text,\r\n        optionTwo: question.optionTwo.text\r\n    }\r\n}\r\n\r\nexport function isAnsweredQuestion(questionId, questions, authedUser){\r\n    const question = questions[questionId]\r\n    const optionOneVotes = question.optionOne.votes\r\n    const optionTwoVotes = question.optionTwo.votes\r\n\r\n    if(optionOneVotes.includes(authedUser) || optionTwoVotes.includes(authedUser)){\r\n        return true\r\n    }\r\n    else{\r\n        return false\r\n    }\r\n}\r\n\r\n\r\nexport function fetchUserAnswer(questionId, questions, authedUser){\r\n    const question = questions[questionId]\r\n    const optionOneVotes = question.optionOne.votes\r\n    const optionTwoVotes = question.optionTwo.votes\r\n\r\n    if(optionOneVotes.includes(authedUser)){\r\n        return 'optionOne'\r\n    }\r\n    else if(optionTwoVotes.includes(authedUser)){\r\n        return 'optionTwo'\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {formatQuestion} from '../utils/helpers'\r\nimport {Link} from \"react-router-dom\"\r\n\r\nclass Question extends Component{\r\n    render(){\r\n        console.log(this.props)\r\n        return(\r\n            <div>\r\n                <div className='row'>\r\n                    <div className='col-md-3'></div>\r\n                    <div className='col-md-6 text-center'>\r\n                    <div className=\"card\" style={{width: '100%'}}>\r\n                <h5 className=\"card-header\">{this.props.question.name} asks would you rather:</h5>\r\n                <div className=\"card-body\">\r\n                    <div className='row'>\r\n                        <div className='col-md-6'>\r\n                        <img src={this.props.question.avatarURL} width='120' height='120' alt='avatar'/>\r\n                        </div>\r\n                        <div className='col-md-6'>\r\n                        <p className=\"card-text\">\r\n                        1. {this.props.question.optionOne}<br/>\r\n                         <b>OR</b><br/>\r\n                        2. {this.props.question.optionTwo}\r\n                    </p>\r\n                    <Link to={`/questions/${this.props.question.id}`} className=\"btn btn-success\">Details</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                    </div>\r\n                    <div className='col-md-3'></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({authedUser, users, questions}, {id}){\r\n    const question= questions[id]\r\n    return{\r\n        authedUser,\r\n        question: formatQuestion(question, users[question.author], authedUser)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Question)","import React , { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport {isAnsweredQuestion} from '../utils/helpers'\r\n\r\nimport Question from './Question'\r\n\r\nclass Dashboard extends Component{\r\n    render(){\r\n        return(\r\n            <div className='text-center'>\r\n                <Tabs>\r\n                    <TabList>\r\n                    <Tab>Unanswered</Tab>\r\n                    <Tab>Answered</Tab>\r\n                    </TabList>\r\n                \r\n                    <TabPanel>\r\n                    <ul>\r\n                    {this.props.questionIds.filter((id)=> (\r\n                        isAnsweredQuestion(id, this.props.questions, this.props.authedUser)===false\r\n                    )).map((id) => {\r\n                        return(\r\n                                    <li key={id}>\r\n                                        <Question id={id}/>\r\n                                    </li>\r\n                            )\r\n      \r\n                        })}\r\n                </ul>\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                    <ul>\r\n                    {this.props.questionIds.filter((id)=> (\r\n                        isAnsweredQuestion(id, this.props.questions, this.props.authedUser)===true\r\n                    )).map((id) => {\r\n                        return(\r\n                                    <li key={id}>\r\n                                        <Question id={id}/>\r\n                                    </li>\r\n                            )\r\n      \r\n                        })}\r\n                </ul>\r\n                    </TabPanel>\r\n                </Tabs>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps ({questions, authedUser}) {\r\n    return {\r\n        questions,\r\n        authedUser,\r\n        questionIds: Object.keys(questions)\r\n        .sort((a,b)=> questions[b].timestamp - questions[a].timestamp),\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dashboard)","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { handleAddQuestion } from \"../actions/shared\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass AddQuestion extends Component {\r\n  state = {\r\n    optionA: \"\",\r\n    optionB: \"\",\r\n    redirectToHome: false\r\n  };\r\n\r\n  handleChangeOptionA = e => {\r\n    const text = e.target.value;\r\n\r\n    this.setState(() => ({\r\n      optionA: text\r\n    }));\r\n  };\r\n\r\n  handleChangeOptionB = e => {\r\n    const text = e.target.value;\r\n\r\n    this.setState(() => ({\r\n      optionB: text\r\n    }));\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { dispatch } = this.props;\r\n\r\n    const { optionA } = this.state;\r\n    const { optionB } = this.state;\r\n\r\n    dispatch(handleAddQuestion(optionA, optionB));\r\n\r\n    this.setState({\r\n      optionA: \"\",\r\n      optionB: \"\",\r\n      redirectToHome: true\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { optionA, optionB, redirectToHome } = this.state;\r\n\r\n    if (redirectToHome === true) {\r\n      // Redirect to dashboard:\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3\"></div>\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card text-center\">\r\n            <div className=\"card-header\">\r\n              <h3>Would You Rather .. </h3>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={this.handleSubmit}>\r\n                <label>1. </label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Your first option\"\r\n                  value={optionA}\r\n                  onChange={this.handleChangeOptionA}\r\n                />\r\n                <br />\r\n                <br />\r\n                <b>OR</b>\r\n                <br />\r\n                <br />\r\n                <label>2. </label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Your second option\"\r\n                  value={optionB}\r\n                  onChange={this.handleChangeOptionB}\r\n                />\r\n                <br />\r\n                <br />\r\n                <button\r\n                  className=\"btn btn-success\"\r\n                  type=\"submit\"\r\n                  disabled={optionA === \"\" || optionB === \"\"}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(AddQuestion);\r\n","import React, { Component } from \"react\";\r\nimport {connect} from 'react-redux'\r\n\r\nclass LeaderboardItem extends Component {\r\n  render() {\r\n    const {name, avatarURL, asked, answered} = this.props\r\n    return (\r\n      <div className=\"card mb-3\" style={{'maxWidth': '540px'}}>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-md-2\">\r\n          <h4>Rank: {this.props.rank}</h4><br/><br/>\r\n          <img src={avatarURL} width='90' height='90' alt='avatar'/>\r\n          </div>\r\n          <div className=\"col-md-10\">\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{name}</h5>\r\n              <div className='row'>\r\n                  <div className='col-md-4'>\r\n                    <div className=\"card text-white bg-primary mb-3\" style={{\"maxWidth\": \"18rem\"}}>\r\n                    <div className=\"card-header\">Asked</div>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{asked}</h5>\r\n                    </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='col-md-4'>\r\n                  <div className=\"card text-white bg-secondary mb-3\" style={{\"maxWidth\": \"18rem\"}}>\r\n                    <div className=\"card-header\">Answered</div>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{answered}</h5>\r\n                    </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='col-md-4'>\r\n                  <div className=\"card text-white bg-success mb-3\" style={{\"maxWidth\": \"18rem\"}}>\r\n                    <div className=\"card-header\">Score</div>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{asked+answered}</h5>\r\n                    </div>\r\n                    </div>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ users }, {id}) {\r\n    const user = users[id];\r\n    return {\r\n      avatarURL: user.avatarURL,\r\n      name : user.name,\r\n      asked : user.questions.length,\r\n      answered: Object.keys(user.answers).length,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LeaderboardItem)\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport LeaderboardItem from \"./LeaderboardItem\";\r\n\r\nclass Leaderboard extends Component {\r\n  render() {\r\n    const { userIds } = this.props;\r\n    let rankCounter = 0;\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3\"></div>\r\n        <div className=\"col-md-6 text-center\">\r\n          <div>\r\n            <h3>Leaderboard</h3>\r\n            <ul>\r\n              {userIds.map(id => {\r\n                rankCounter++;\r\n                return (\r\n                  <li key={id}>\r\n                    <LeaderboardItem id={id} rank={rankCounter} />\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ users }) {\r\n  return {\r\n    // Return user IDs from the store and sort them by score: user.question.length + user.answers.length:\r\n    userIds: Object.keys(users).sort(\r\n      (a, b) =>\r\n        (Object.keys(users[b].answers).length + users[b].questions.length) -\r\n        (Object.keys(users[a].answers).length + users[a].questions.length)\r\n    )\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Leaderboard);\r\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div className=\"text-center\">\r\n      <h2>404 Error<br/>Ops, we couldn't find your question!</h2>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { isAnsweredQuestion, fetchUserAnswer } from \"../utils/helpers\";\r\nimport { handleAddQuestionAnswer } from \"../actions/shared\";\r\nimport { ProgressBar } from \"react-bootstrap\";\r\nimport NotFound from './NotFound'\r\n\r\nclass QuestionDetails extends Component {\r\n  state = {\r\n    selectedOption: \"optionOne\"\r\n  };\r\n\r\n  handleOptionChange = changeEvent =>\r\n    this.setState({\r\n      selectedOption: changeEvent.target.value\r\n    });\r\n\r\n  handleFormSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { dispatch } = this.props;\r\n\r\n    console.log(\"You have selected:\", this.state.selectedOption);\r\n\r\n    dispatch(\r\n      handleAddQuestionAnswer(this.state.selectedOption, this.props.questionId)\r\n    );\r\n  };\r\n\r\n  render() {\r\n\r\n    let totalVotes,optionOnePercentage,\r\n    optionTwoPercentage, answered, userAnswer\r\n\r\n    const {questionFound} = this.props\r\n    \r\n    if(questionFound === true) {\r\n      answered = isAnsweredQuestion(\r\n        this.props.questionId,\r\n        this.props.questions,\r\n        this.props.authedUser\r\n      );\r\n      userAnswer = fetchUserAnswer(\r\n        this.props.questionId,\r\n        this.props.questions,\r\n        this.props.authedUser\r\n      );\r\n\r\n      totalVotes = this.props.optionOneVotes + this.props.optionTwoVotes;\r\n      optionOnePercentage = (this.props.optionOneVotes * 100) / totalVotes;\r\n      optionTwoPercentage = (this.props.optionTwoVotes * 100) / totalVotes;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {questionFound === true && (\r\n          <div className=\"row\">\r\n            <div className=\"col-md-3\"></div>\r\n            <div className=\"col-md-6 text-center\">\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <div className=\"card mb-3\" style={{ maxWidth: \"540px\" }}>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-md-4\">\r\n                    <img\r\n                      src={this.props.avatarURL}\r\n                      width=\"90\"\r\n                      height=\"90\"\r\n                      alt=\"avatar\"\r\n                    />\r\n                    <br />\r\n                    <b>By : {this.props.authorName}</b>\r\n                  </div>\r\n                  <div className=\"col-md-8\">\r\n                    <div className=\"card-body\">\r\n                      <h5 className=\"card-title\">Would you Rather..</h5>\r\n\r\n                      {answered === false && (\r\n                        <form onSubmit={this.handleFormSubmit}>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"optionOne\"\r\n                                checked={\r\n                                  this.state.selectedOption === \"optionOne\"\r\n                                }\r\n                                onChange={this.handleOptionChange}\r\n                              />\r\n                              {this.props.optionOne}\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"optionTwo\"\r\n                                checked={\r\n                                  this.state.selectedOption === \"optionTwo\"\r\n                                }\r\n                                onChange={this.handleOptionChange}\r\n                              />\r\n                              {this.props.optionTwo}\r\n                            </label>\r\n                          </div>\r\n\r\n                          <button className=\"btn btn-primary\" type=\"submit\">\r\n                            Save\r\n                          </button>\r\n                        </form>\r\n                      )}\r\n                      {answered === true && (\r\n                        <div>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                checked={userAnswer === \"optionOne\"}\r\n                                readOnly\r\n                              />\r\n                              {this.props.optionOne}\r\n                              <br />\r\n                            </label>\r\n                            <br />\r\n                            <ProgressBar\r\n                              now={optionOnePercentage}\r\n                              label={`${optionOnePercentage.toFixed(2)}%`}\r\n                              striped={true}\r\n                            />\r\n                            <small>\r\n                              {this.props.optionOneVotes} out of {totalVotes}{\" \"}\r\n                              votes\r\n                            </small>\r\n                          </div>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                checked={userAnswer === \"optionTwo\"}\r\n                                readOnly\r\n                              />\r\n                              {this.props.optionTwo}\r\n                              <br />\r\n                            </label>\r\n                            <br />\r\n                            <ProgressBar\r\n                              now={optionTwoPercentage}\r\n                              label={`${optionTwoPercentage.toFixed(2)}%`}\r\n                              striped={true}\r\n                            />\r\n                            <small>\r\n                              {this.props.optionTwoVotes} out of {totalVotes}{\" \"}\r\n                              votes\r\n                            </small>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-3\"></div>\r\n          </div>\r\n        )}\r\n        {questionFound === false && (\r\n          <NotFound />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ questions, users, authedUser }, { questionId }) {\r\n  const question = questions[questionId];\r\n  const questionFound = (typeof question === 'undefined') ? false : true\r\n\r\n  if (questionFound=== true) {\r\n    const author = users[question.author];\r\n    return {\r\n      questionFound,\r\n      questionId,\r\n      authedUser,\r\n      author: author,\r\n      authorName: author.name,\r\n      avatarURL: author.avatarURL,\r\n      optionOne: question.optionOne.text,\r\n      optionTwo: question.optionTwo.text,\r\n      optionOneVotes: question.optionOne.votes.length,\r\n      optionTwoVotes: question.optionTwo.votes.length,\r\n      questions\r\n    };\r\n  } else {\r\n    return {\r\n      questionFound\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(QuestionDetails);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setAuthedUser } from \"../actions/authedUser\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    selectedUser: \"\"\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    \r\n    // dispatch\r\n    this.props.dispatch(setAuthedUser(this.state.selectedUser));\r\n  };\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.userIds.length > 0 && state.selectedUser === '') {\r\n        return{\r\n            selectedUser : props.userIds[0]\r\n        }\r\n    }\r\n    else{\r\n        return null\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\"></div>\r\n        <div className=\"col-md-4\">\r\n          <br />\r\n          <br />\r\n          <div className=\"card text-center\">\r\n            <div className=\"card-header\">Login</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">Welcome to Would you Rather App</h5>\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/images/react-and-redux.jpg\"}\r\n                alt=\"react logo\"\r\n              />\r\n              <p className=\"card-text\">Please select a user</p>\r\n              <form onSubmit={this.handleSubmit}>\r\n                <select\r\n                  value={this.state.selectedUser}\r\n                  onChange={e =>\r\n                    this.setState({ selectedUser: e.target.value })\r\n                  }\r\n                >\r\n                  {this.props.userIds.map(id => (\r\n                    <option key={id} value={id}>\r\n                      {id}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                <br />\r\n                <br />\r\n                <button className=\"btn btn-primary\" type=\"submit\">\r\n                  Login\r\n                </button>\r\n              </form>\r\n            </div>\r\n            <div className=\"card-footer text-muted\">\r\n              Powered by React & Redux\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ users }) {\r\n  const userIds = Object.keys(users);\r\n  return {\r\n    userIds\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n","import React, { Component, Fragment } from \"react\";\nimport { BrowserRouter as Router, Route, HashRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { handleInitialData } from \"../actions/shared\";\n\nimport \"./App.css\";\nimport Nav from \"./Nav\";\nimport Dashboard from \"./Dashboard\";\nimport AddQuestion from \"./AddQuestion\";\nimport Leaderboard from \"./Leaderboard\";\nimport QuestionDetails from \"./QuestionDetails\";\nimport Login from \"./Login\";\nimport LoadingBar from \"react-redux-loading-bar\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch(handleInitialData());\n  }\n  render() {\n    return (\n      <div>\n        {this.props.authedUser === null ? (\n          <Login />\n        ) : (\n          <Fragment>\n            <LoadingBar />\n            <HashRouter basename=\"/\">\n              <Nav authedUser={this.props.authedUser} />\n              {this.props.loading === true ? null : (\n                <div>\n                  <Route path=\"/\" exact component={Dashboard} />\n                  <Route path=\"/add\" component={AddQuestion} />\n                  <Route path=\"/leaderboard\" component={Leaderboard} />\n                  <Route\n                    path=\"/questions/:questionId\"\n                    render={props => (\n                      <QuestionDetails\n                        questionId={props.match.params.questionId}\n                      />\n                    )}\n                  />\n                </div>\n              )}\n            </HashRouter>\n          </Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ authedUser }) {\n  return {\n    authedUser,\n    loading: authedUser === null\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n","import {combineReducers} from 'redux'\r\nimport authedUser from './authedUser'\r\nimport users from './users'\r\nimport questions from './questions'\r\nimport { loadingBarReducer } from 'react-redux-loading-bar'\r\n\r\nexport default combineReducers({\r\n    authedUser,\r\n    users,\r\n    questions,\r\n    loadingBar: loadingBarReducer,\r\n})","import {SET_AUTHED_USER, LOGOUT_USER} from '../actions/authedUser'\r\n\r\nexport default function authedUser (state=null, action){\r\n    switch(action.type){\r\n        case SET_AUTHED_USER:\r\n            return action.id\r\n        case LOGOUT_USER:\r\n            return null\r\n        default:\r\n            return state\r\n    }\r\n}","import {RECEIVE_USERS,\r\n    ADD_USER_QUESTION,\r\n    ADD_USER_QUESTION_ANSWER} from '../actions/users'\r\n\r\n\r\nexport default function users (state={}, action) {\r\n    switch(action.type){\r\n        case RECEIVE_USERS:\r\n            return{\r\n                ...state,\r\n                ...action.users\r\n            }\r\n\r\n        case ADD_USER_QUESTION:\r\n            return{\r\n                ...state,\r\n                [action.userId]: {\r\n                    ...state[action.userId],\r\n                    questions: state[action.userId].questions.concat([action.questionId])\r\n                }\r\n            }\r\n            case ADD_USER_QUESTION_ANSWER:\r\n                return{\r\n                    ...state,\r\n                    [action.userId]: {\r\n                    ...state[action.userId],\r\n                    answers: {\r\n                        ...state[action.userId].answers,\r\n                        [action.questionId]: action.answer\r\n                    }\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {RECEIVE_QUESTIONS\r\n    , ADD_QUESTION\r\n    , ADD_QUESTION_ANSWER} from '../actions/questions'\r\n\r\n\r\nexport default function questions (state={}, action) {\r\n    switch(action.type){\r\n        case RECEIVE_QUESTIONS:\r\n            return{\r\n                ...state,\r\n                ...action.questions\r\n            }\r\n\r\n        case ADD_QUESTION:\r\n            return{\r\n                ...state,\r\n                [action.question.id] : action.question\r\n            }\r\n        case ADD_QUESTION_ANSWER:\r\n                if(action.answer==='optionOne'){\r\n                    return{\r\n                        ...state,\r\n                        [action.qid] : {\r\n                            ...state[action.qid],\r\n                            optionOne:{\r\n                                ...state[action.qid].optionOne,\r\n                                votes: state[action.qid].optionOne.votes.concat([action.userId])\r\n                            }   \r\n                        }\r\n                    }\r\n                }\r\n                else{\r\n                    return{\r\n                        ...state,\r\n                        [action.qid] : {\r\n                            ...state[action.qid],\r\n                            optionTwo:{\r\n                                ...state[action.qid].optionTwo,\r\n                                votes: state[action.qid].optionTwo.votes.concat([action.userId])\r\n                            }   \r\n                        }\r\n                    }   \r\n                }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","const logger = (store) => (next) => (action) => {\r\n    console.group(action.type)\r\n        console.log('The action: ', action)\r\n        const returnValue = next(action)\r\n        console.log('The new state: ', store.getState())\r\n    console.groupEnd()\r\n\r\n    return returnValue\r\n}\r\n\r\n\r\nexport default logger","import thunk from 'redux-thunk'\r\nimport logger from './logger'\r\nimport { applyMiddleware } from 'redux'\r\n\r\nexport default applyMiddleware(\r\n    thunk,\r\n    logger,\r\n)","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './reducers'\nimport middleware from './middleware'\n\n\nconst store = createStore(reducer, middleware)\n\nReactDOM.render(\n<Provider store={store}>\n    <App />\n</Provider>\n, document.getElementById('root'));\n"],"sourceRoot":""}